name: Docker CI/CD

on:
  schedule:
    - cron: '21 0 * * *'
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v3

    # Setup Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.0.0

    # Login to Docker registry
    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3.0.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Build Docker image
    - name: Build Docker image
      run: docker build . --file Dockerfile --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    # Push Docker image
    - name: Push Docker image
      if: github.event_name != 'pull_request'
      run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    # Install Cosign for signing
    - name: Install cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@v3.1.1
      with:
        cosign-release: 'v2.1.1'

    # Extract metadata (tags, labels) for Docker
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5.0.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    # Sign the published Docker image
    - name: Sign the published Docker image
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        echo "Signing the Docker image..."
        cosign sign --yes ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    # Cleanup if needed
    - name: Cleanup
      if: github.event_name != 'pull_request'
      run: docker rmi ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
